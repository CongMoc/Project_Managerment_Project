<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3wGPM7Py1SXBQAAAAABJRU5ErkJggg==
</value>
  </data>
</root>